// <auto-generated />
namespace NXUI.Extensions;

/// <summary>
/// The avalonia <see cref="Avalonia.Controls.DefinitionBase"/> class property extension methods.
/// </summary>
public static partial class DefinitionBaseExtensions
{
    // Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/> value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="value">The value.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T SharedSizeGroup<T>(this T obj, System.String value) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty] = value;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/> with binding source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="binding">The source binding.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T SharedSizeGroup<T>(
        this T obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Controls.Control
    {
        var descriptor = Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/> with observable source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="observable">The source observable.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T SharedSizeGroup<T>(
        this T obj,
        IObservable<System.String> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Controls.Control
    {
        var descriptor = Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// Makes a <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/> binding.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>A <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/> binding.</returns>
    public static Avalonia.Data.IBinding BindSharedSizeGroup(
        this Avalonia.Controls.Control obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// Gets an observable for an <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>
    /// An observable which fires immediately with the current value of the property on the
    /// object and subsequently each time the property value changes.
    /// </returns>
    public static IObservable<System.String> ObserveSharedSizeGroup(this Avalonia.Controls.Control obj)
    {
        return obj.GetObservable(Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty);
    }

    /// <summary>
    /// Sets a handler with an observable for an <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and observable with the current value of the property.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnSharedSizeGroup<T>(this T obj, Action<Avalonia.Controls.Control, IObservable<System.String>> handler) where T : Avalonia.Controls.Control
    {
        var observable = obj.GetObservable(Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a binding observable for <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable including binding errors.</returns>
    public static IObservable<BindingValue<System.String>> ObserveBindingSharedSizeGroup(this Avalonia.Controls.Control obj)
    {
        return obj.GetBindingObservable(Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty);
    }

    /// <summary>
    /// Sets a handler with a binding observable for <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and binding observable.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnBindingSharedSizeGroup<T>(this T obj, Action<Avalonia.Controls.Control, IObservable<BindingValue<System.String>>> handler) where T : Avalonia.Controls.Control
    {
        var observable = obj.GetBindingObservable(Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a property change observable for <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable with property change details.</returns>
    public static IObservable<AvaloniaPropertyChangedEventArgs> ObserveSharedSizeGroupChanged(this Avalonia.Controls.Control obj)
    {
        return obj.GetPropertyChangedObservable(Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty);
    }

    /// <summary>
    /// Sets a handler with property change observable for <see cref="Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and property change observable.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnSharedSizeGroupChanged<T>(this T obj, Action<Avalonia.Controls.Control, IObservable<AvaloniaPropertyChangedEventArgs>> handler) where T : Avalonia.Controls.Control
    {
        var observable = obj.GetPropertyChangedObservable(Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty);
        handler(obj, observable);
        return obj;
    }
}

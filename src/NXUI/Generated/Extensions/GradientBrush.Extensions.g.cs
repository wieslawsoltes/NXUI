// <auto-generated />
namespace NXUI.Extensions;

/// <summary>
/// The avalonia <see cref="Avalonia.Media.GradientBrush"/> class property extension methods.
/// </summary>
public static partial class GradientBrushExtensions
{
    // Avalonia.Media.GradientBrush.SpreadMethodProperty

    /// <summary>
    /// Sets a <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/> value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="value">The value.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T SpreadMethod<T>(this T obj, Avalonia.Media.GradientSpreadMethod value) where T : Avalonia.Media.GradientBrush
    {
        obj[Avalonia.Media.GradientBrush.SpreadMethodProperty] = value;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/> with binding source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="binding">The source binding.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T SpreadMethod<T>(
        this T obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Media.GradientBrush
    {
        var descriptor = Avalonia.Media.GradientBrush.SpreadMethodProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/> with observable source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="observable">The source observable.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T SpreadMethod<T>(
        this T obj,
        IObservable<Avalonia.Media.GradientSpreadMethod> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Media.GradientBrush
    {
        var descriptor = Avalonia.Media.GradientBrush.SpreadMethodProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// Makes a <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/> binding.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>A <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/> binding.</returns>
    public static Avalonia.Data.IBinding BindSpreadMethod(
        this Avalonia.Media.GradientBrush obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.GradientBrush.SpreadMethodProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// Gets an observable for an <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>
    /// An observable which fires immediately with the current value of the property on the
    /// object and subsequently each time the property value changes.
    /// </returns>
    public static IObservable<Avalonia.Media.GradientSpreadMethod> ObserveSpreadMethod(this Avalonia.Media.GradientBrush obj)
    {
        return obj.GetObservable(Avalonia.Media.GradientBrush.SpreadMethodProperty);
    }

    /// <summary>
    /// Sets a handler with an observable for an <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and observable with the current value of the property.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnSpreadMethod<T>(this T obj, Action<Avalonia.Media.GradientBrush, IObservable<Avalonia.Media.GradientSpreadMethod>> handler) where T : Avalonia.Media.GradientBrush
    {
        var observable = obj.GetObservable(Avalonia.Media.GradientBrush.SpreadMethodProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a binding observable for <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable including binding errors.</returns>
    public static IObservable<BindingValue<Avalonia.Media.GradientSpreadMethod>> ObserveBindingSpreadMethod(this Avalonia.Media.GradientBrush obj)
    {
        return obj.GetBindingObservable(Avalonia.Media.GradientBrush.SpreadMethodProperty);
    }

    /// <summary>
    /// Sets a handler with a binding observable for <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and binding observable.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnBindingSpreadMethod<T>(this T obj, Action<Avalonia.Media.GradientBrush, IObservable<BindingValue<Avalonia.Media.GradientSpreadMethod>>> handler) where T : Avalonia.Media.GradientBrush
    {
        var observable = obj.GetBindingObservable(Avalonia.Media.GradientBrush.SpreadMethodProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a property change observable for <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable with property change details.</returns>
    public static IObservable<AvaloniaPropertyChangedEventArgs> ObserveSpreadMethodChanged(this Avalonia.Media.GradientBrush obj)
    {
        return obj.GetPropertyChangedObservable(Avalonia.Media.GradientBrush.SpreadMethodProperty);
    }

    /// <summary>
    /// Sets a handler with property change observable for <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and property change observable.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnSpreadMethodChanged<T>(this T obj, Action<Avalonia.Media.GradientBrush, IObservable<AvaloniaPropertyChangedEventArgs>> handler) where T : Avalonia.Media.GradientBrush
    {
        var observable = obj.GetPropertyChangedObservable(Avalonia.Media.GradientBrush.SpreadMethodProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/> property value to <see cref="Avalonia.Media.GradientSpreadMethod.Pad"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T SpreadMethodPad<T>(this T obj) where T : Avalonia.Media.GradientBrush
    {
        obj[Avalonia.Media.GradientBrush.SpreadMethodProperty] = Avalonia.Media.GradientSpreadMethod.Pad;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/> property value to <see cref="Avalonia.Media.GradientSpreadMethod.Reflect"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T SpreadMethodReflect<T>(this T obj) where T : Avalonia.Media.GradientBrush
    {
        obj[Avalonia.Media.GradientBrush.SpreadMethodProperty] = Avalonia.Media.GradientSpreadMethod.Reflect;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Media.GradientBrush.SpreadMethodProperty"/> property value to <see cref="Avalonia.Media.GradientSpreadMethod.Repeat"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T SpreadMethodRepeat<T>(this T obj) where T : Avalonia.Media.GradientBrush
    {
        obj[Avalonia.Media.GradientBrush.SpreadMethodProperty] = Avalonia.Media.GradientSpreadMethod.Repeat;
        return obj;
    }

    // Avalonia.Media.GradientBrush.GradientStopsProperty

    /// <summary>
    /// Sets a <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/> value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="value">The value.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T GradientStops<T>(this T obj, Avalonia.Media.GradientStops value) where T : Avalonia.Media.GradientBrush
    {
        obj[Avalonia.Media.GradientBrush.GradientStopsProperty] = value;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/> with binding source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="binding">The source binding.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T GradientStops<T>(
        this T obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Media.GradientBrush
    {
        var descriptor = Avalonia.Media.GradientBrush.GradientStopsProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/> with observable source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="observable">The source observable.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T GradientStops<T>(
        this T obj,
        IObservable<Avalonia.Media.GradientStops> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Media.GradientBrush
    {
        var descriptor = Avalonia.Media.GradientBrush.GradientStopsProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// Makes a <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/> binding.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>A <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/> binding.</returns>
    public static Avalonia.Data.IBinding BindGradientStops(
        this Avalonia.Media.GradientBrush obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.GradientBrush.GradientStopsProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// Gets an observable for an <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>
    /// An observable which fires immediately with the current value of the property on the
    /// object and subsequently each time the property value changes.
    /// </returns>
    public static IObservable<Avalonia.Media.GradientStops> ObserveGradientStops(this Avalonia.Media.GradientBrush obj)
    {
        return obj.GetObservable(Avalonia.Media.GradientBrush.GradientStopsProperty);
    }

    /// <summary>
    /// Sets a handler with an observable for an <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and observable with the current value of the property.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnGradientStops<T>(this T obj, Action<Avalonia.Media.GradientBrush, IObservable<Avalonia.Media.GradientStops>> handler) where T : Avalonia.Media.GradientBrush
    {
        var observable = obj.GetObservable(Avalonia.Media.GradientBrush.GradientStopsProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a binding observable for <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable including binding errors.</returns>
    public static IObservable<BindingValue<Avalonia.Media.GradientStops>> ObserveBindingGradientStops(this Avalonia.Media.GradientBrush obj)
    {
        return obj.GetBindingObservable(Avalonia.Media.GradientBrush.GradientStopsProperty);
    }

    /// <summary>
    /// Sets a handler with a binding observable for <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and binding observable.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnBindingGradientStops<T>(this T obj, Action<Avalonia.Media.GradientBrush, IObservable<BindingValue<Avalonia.Media.GradientStops>>> handler) where T : Avalonia.Media.GradientBrush
    {
        var observable = obj.GetBindingObservable(Avalonia.Media.GradientBrush.GradientStopsProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a property change observable for <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable with property change details.</returns>
    public static IObservable<AvaloniaPropertyChangedEventArgs> ObserveGradientStopsChanged(this Avalonia.Media.GradientBrush obj)
    {
        return obj.GetPropertyChangedObservable(Avalonia.Media.GradientBrush.GradientStopsProperty);
    }

    /// <summary>
    /// Sets a handler with property change observable for <see cref="Avalonia.Media.GradientBrush.GradientStopsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and property change observable.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnGradientStopsChanged<T>(this T obj, Action<Avalonia.Media.GradientBrush, IObservable<AvaloniaPropertyChangedEventArgs>> handler) where T : Avalonia.Media.GradientBrush
    {
        var observable = obj.GetPropertyChangedObservable(Avalonia.Media.GradientBrush.GradientStopsProperty);
        handler(obj, observable);
        return obj;
    }
}

// <auto-generated />
namespace NXUI.Extensions;

/// <summary>
/// The avalonia <see cref="Avalonia.Controls.Documents.Inline"/> class property extension methods.
/// </summary>
public static partial class InlineExtensions
{
    // Avalonia.Controls.Documents.Inline.TextDecorationsProperty

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/> value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="value">The value.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T TextDecorations<T>(this T obj, Avalonia.Media.TextDecorationCollection value) where T : Avalonia.Controls.Documents.Inline
    {
        obj[Avalonia.Controls.Documents.Inline.TextDecorationsProperty] = value;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/> with binding source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="binding">The source binding.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T TextDecorations<T>(
        this T obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Controls.Documents.Inline
    {
        var descriptor = Avalonia.Controls.Documents.Inline.TextDecorationsProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/> with observable source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="observable">The source observable.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T TextDecorations<T>(
        this T obj,
        IObservable<Avalonia.Media.TextDecorationCollection> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Controls.Documents.Inline
    {
        var descriptor = Avalonia.Controls.Documents.Inline.TextDecorationsProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// Makes a <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/> binding.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>A <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/> binding.</returns>
    public static Avalonia.Data.IBinding BindTextDecorations(
        this Avalonia.Controls.Documents.Inline obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Controls.Documents.Inline.TextDecorationsProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// Gets an observable for an <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>
    /// An observable which fires immediately with the current value of the property on the
    /// object and subsequently each time the property value changes.
    /// </returns>
    public static IObservable<Avalonia.Media.TextDecorationCollection> ObserveTextDecorations(this Avalonia.Controls.Documents.Inline obj)
    {
        return obj.GetObservable(Avalonia.Controls.Documents.Inline.TextDecorationsProperty);
    }

    /// <summary>
    /// Sets a handler with an observable for an <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and observable with the current value of the property.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnTextDecorations<T>(this T obj, Action<Avalonia.Controls.Documents.Inline, IObservable<Avalonia.Media.TextDecorationCollection>> handler) where T : Avalonia.Controls.Documents.Inline
    {
        var observable = obj.GetObservable(Avalonia.Controls.Documents.Inline.TextDecorationsProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a binding observable for <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable including binding errors.</returns>
    public static IObservable<BindingValue<Avalonia.Media.TextDecorationCollection>> ObserveBindingTextDecorations(this Avalonia.Controls.Documents.Inline obj)
    {
        return obj.GetBindingObservable(Avalonia.Controls.Documents.Inline.TextDecorationsProperty);
    }

    /// <summary>
    /// Sets a handler with a binding observable for <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and binding observable.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnBindingTextDecorations<T>(this T obj, Action<Avalonia.Controls.Documents.Inline, IObservable<BindingValue<Avalonia.Media.TextDecorationCollection>>> handler) where T : Avalonia.Controls.Documents.Inline
    {
        var observable = obj.GetBindingObservable(Avalonia.Controls.Documents.Inline.TextDecorationsProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a property change observable for <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable with property change details.</returns>
    public static IObservable<AvaloniaPropertyChangedEventArgs> ObserveTextDecorationsChanged(this Avalonia.Controls.Documents.Inline obj)
    {
        return obj.GetPropertyChangedObservable(Avalonia.Controls.Documents.Inline.TextDecorationsProperty);
    }

    /// <summary>
    /// Sets a handler with property change observable for <see cref="Avalonia.Controls.Documents.Inline.TextDecorationsProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and property change observable.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnTextDecorationsChanged<T>(this T obj, Action<Avalonia.Controls.Documents.Inline, IObservable<AvaloniaPropertyChangedEventArgs>> handler) where T : Avalonia.Controls.Documents.Inline
    {
        var observable = obj.GetPropertyChangedObservable(Avalonia.Controls.Documents.Inline.TextDecorationsProperty);
        handler(obj, observable);
        return obj;
    }

    // Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="value">The value.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignment<T>(this T obj, Avalonia.Media.BaselineAlignment value) where T : Avalonia.Controls.Documents.Inline
    {
        obj[Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty] = value;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> with binding source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="binding">The source binding.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignment<T>(
        this T obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Controls.Documents.Inline
    {
        var descriptor = Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> with observable source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="observable">The source observable.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignment<T>(
        this T obj,
        IObservable<Avalonia.Media.BaselineAlignment> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Controls.Documents.Inline
    {
        var descriptor = Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// Makes a <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> binding.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>A <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> binding.</returns>
    public static Avalonia.Data.IBinding BindBaselineAlignment(
        this Avalonia.Controls.Documents.Inline obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// Gets an observable for an <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>
    /// An observable which fires immediately with the current value of the property on the
    /// object and subsequently each time the property value changes.
    /// </returns>
    public static IObservable<Avalonia.Media.BaselineAlignment> ObserveBaselineAlignment(this Avalonia.Controls.Documents.Inline obj)
    {
        return obj.GetObservable(Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty);
    }

    /// <summary>
    /// Sets a handler with an observable for an <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and observable with the current value of the property.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnBaselineAlignment<T>(this T obj, Action<Avalonia.Controls.Documents.Inline, IObservable<Avalonia.Media.BaselineAlignment>> handler) where T : Avalonia.Controls.Documents.Inline
    {
        var observable = obj.GetObservable(Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a binding observable for <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable including binding errors.</returns>
    public static IObservable<BindingValue<Avalonia.Media.BaselineAlignment>> ObserveBindingBaselineAlignment(this Avalonia.Controls.Documents.Inline obj)
    {
        return obj.GetBindingObservable(Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty);
    }

    /// <summary>
    /// Sets a handler with a binding observable for <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and binding observable.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnBindingBaselineAlignment<T>(this T obj, Action<Avalonia.Controls.Documents.Inline, IObservable<BindingValue<Avalonia.Media.BaselineAlignment>>> handler) where T : Avalonia.Controls.Documents.Inline
    {
        var observable = obj.GetBindingObservable(Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a property change observable for <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable with property change details.</returns>
    public static IObservable<AvaloniaPropertyChangedEventArgs> ObserveBaselineAlignmentChanged(this Avalonia.Controls.Documents.Inline obj)
    {
        return obj.GetPropertyChangedObservable(Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty);
    }

    /// <summary>
    /// Sets a handler with property change observable for <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and property change observable.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnBaselineAlignmentChanged<T>(this T obj, Action<Avalonia.Controls.Documents.Inline, IObservable<AvaloniaPropertyChangedEventArgs>> handler) where T : Avalonia.Controls.Documents.Inline
    {
        var observable = obj.GetPropertyChangedObservable(Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> property value to <see cref="Avalonia.Media.BaselineAlignment.Top"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignmentTop<T>(this T obj) where T : Avalonia.Controls.Documents.Inline
    {
        obj[Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty] = Avalonia.Media.BaselineAlignment.Top;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> property value to <see cref="Avalonia.Media.BaselineAlignment.Center"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignmentCenter<T>(this T obj) where T : Avalonia.Controls.Documents.Inline
    {
        obj[Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty] = Avalonia.Media.BaselineAlignment.Center;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> property value to <see cref="Avalonia.Media.BaselineAlignment.Bottom"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignmentBottom<T>(this T obj) where T : Avalonia.Controls.Documents.Inline
    {
        obj[Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty] = Avalonia.Media.BaselineAlignment.Bottom;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> property value to <see cref="Avalonia.Media.BaselineAlignment.Baseline"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignmentBaseline<T>(this T obj) where T : Avalonia.Controls.Documents.Inline
    {
        obj[Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty] = Avalonia.Media.BaselineAlignment.Baseline;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> property value to <see cref="Avalonia.Media.BaselineAlignment.TextTop"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignmentTextTop<T>(this T obj) where T : Avalonia.Controls.Documents.Inline
    {
        obj[Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty] = Avalonia.Media.BaselineAlignment.TextTop;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> property value to <see cref="Avalonia.Media.BaselineAlignment.TextBottom"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignmentTextBottom<T>(this T obj) where T : Avalonia.Controls.Documents.Inline
    {
        obj[Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty] = Avalonia.Media.BaselineAlignment.TextBottom;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> property value to <see cref="Avalonia.Media.BaselineAlignment.Subscript"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignmentSubscript<T>(this T obj) where T : Avalonia.Controls.Documents.Inline
    {
        obj[Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty] = Avalonia.Media.BaselineAlignment.Subscript;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty"/> property value to <see cref="Avalonia.Media.BaselineAlignment.Superscript"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T BaselineAlignmentSuperscript<T>(this T obj) where T : Avalonia.Controls.Documents.Inline
    {
        obj[Avalonia.Controls.Documents.Inline.BaselineAlignmentProperty] = Avalonia.Media.BaselineAlignment.Superscript;
        return obj;
    }
}

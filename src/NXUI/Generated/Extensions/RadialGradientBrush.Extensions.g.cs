// <auto-generated />
namespace NXUI.Extensions;

/// <summary>
/// The avalonia <see cref="Avalonia.Media.RadialGradientBrush"/> class property extension methods.
/// </summary>
public static partial class RadialGradientBrushExtensions
{
    // Avalonia.Media.RadialGradientBrush.CenterProperty

    /// <summary>
    /// Sets a <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/> value on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="value">The value to set for the property.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush Center(this Avalonia.Media.RadialGradientBrush obj, Avalonia.RelativePoint value)
    {
        obj[Avalonia.Media.RadialGradientBrush.CenterProperty] = value;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/> with a source binding specified as a parameter.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="binding">The source binding.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush Center(
        this Avalonia.Media.RadialGradientBrush obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.CenterProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/> with a source binding specified as an observable.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="observable">The source observable.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush Center(
        this Avalonia.Media.RadialGradientBrush obj,
        IObservable<Avalonia.RelativePoint> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.CenterProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// Makes a <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/> binding on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>A <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/> binding.</returns>
    public static Avalonia.Data.IBinding BindCenter(
        this Avalonia.Media.RadialGradientBrush obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.CenterProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// Gets an observable for an <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>
    /// An observable which fires immediately with the current value of the property on the object, and thereafter whenever the property changes.
    /// </returns>
    public static IObservable<Avalonia.RelativePoint> ObserveCenter(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetObservable(Avalonia.Media.RadialGradientBrush.CenterProperty);
    }

    /// <summary>
    /// Registers a handler for the <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/> property on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler to be called when the property changes.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnCenter(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<Avalonia.RelativePoint>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Media.RadialGradientBrush.CenterProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a binding observable for <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable including binding errors.</returns>
    public static IObservable<BindingValue<Avalonia.RelativePoint>> ObserveBindingCenter(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetBindingObservable(Avalonia.Media.RadialGradientBrush.CenterProperty);
    }

    /// <summary>
    /// Sets a handler with a binding observable for <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and binding observable.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnBindingCenter(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<BindingValue<Avalonia.RelativePoint>>> handler)
    {
        var observable = obj.GetBindingObservable(Avalonia.Media.RadialGradientBrush.CenterProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a property change observable for <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable with property change details.</returns>
    public static IObservable<AvaloniaPropertyChangedEventArgs> ObserveCenterChanged(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetPropertyChangedObservable(Avalonia.Media.RadialGradientBrush.CenterProperty);
    }

    /// <summary>
    /// Sets a handler with property change observable for <see cref="Avalonia.Media.RadialGradientBrush.CenterProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and property change observable.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnCenterChanged(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<AvaloniaPropertyChangedEventArgs>> handler)
    {
        var observable = obj.GetPropertyChangedObservable(Avalonia.Media.RadialGradientBrush.CenterProperty);
        handler(obj, observable);
        return obj;
    }

    // Avalonia.Media.RadialGradientBrush.GradientOriginProperty

    /// <summary>
    /// Sets a <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/> value on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="value">The value to set for the property.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush GradientOrigin(this Avalonia.Media.RadialGradientBrush obj, Avalonia.RelativePoint value)
    {
        obj[Avalonia.Media.RadialGradientBrush.GradientOriginProperty] = value;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/> with a source binding specified as a parameter.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="binding">The source binding.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush GradientOrigin(
        this Avalonia.Media.RadialGradientBrush obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.GradientOriginProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/> with a source binding specified as an observable.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="observable">The source observable.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush GradientOrigin(
        this Avalonia.Media.RadialGradientBrush obj,
        IObservable<Avalonia.RelativePoint> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.GradientOriginProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// Makes a <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/> binding on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>A <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/> binding.</returns>
    public static Avalonia.Data.IBinding BindGradientOrigin(
        this Avalonia.Media.RadialGradientBrush obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.GradientOriginProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// Gets an observable for an <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>
    /// An observable which fires immediately with the current value of the property on the object, and thereafter whenever the property changes.
    /// </returns>
    public static IObservable<Avalonia.RelativePoint> ObserveGradientOrigin(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetObservable(Avalonia.Media.RadialGradientBrush.GradientOriginProperty);
    }

    /// <summary>
    /// Registers a handler for the <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/> property on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler to be called when the property changes.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnGradientOrigin(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<Avalonia.RelativePoint>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Media.RadialGradientBrush.GradientOriginProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a binding observable for <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable including binding errors.</returns>
    public static IObservable<BindingValue<Avalonia.RelativePoint>> ObserveBindingGradientOrigin(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetBindingObservable(Avalonia.Media.RadialGradientBrush.GradientOriginProperty);
    }

    /// <summary>
    /// Sets a handler with a binding observable for <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and binding observable.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnBindingGradientOrigin(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<BindingValue<Avalonia.RelativePoint>>> handler)
    {
        var observable = obj.GetBindingObservable(Avalonia.Media.RadialGradientBrush.GradientOriginProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a property change observable for <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable with property change details.</returns>
    public static IObservable<AvaloniaPropertyChangedEventArgs> ObserveGradientOriginChanged(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetPropertyChangedObservable(Avalonia.Media.RadialGradientBrush.GradientOriginProperty);
    }

    /// <summary>
    /// Sets a handler with property change observable for <see cref="Avalonia.Media.RadialGradientBrush.GradientOriginProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and property change observable.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnGradientOriginChanged(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<AvaloniaPropertyChangedEventArgs>> handler)
    {
        var observable = obj.GetPropertyChangedObservable(Avalonia.Media.RadialGradientBrush.GradientOriginProperty);
        handler(obj, observable);
        return obj;
    }

    // Avalonia.Media.RadialGradientBrush.RadiusXProperty

    /// <summary>
    /// Sets a <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/> value on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="value">The value to set for the property.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush RadiusX(this Avalonia.Media.RadialGradientBrush obj, Avalonia.RelativeScalar value)
    {
        obj[Avalonia.Media.RadialGradientBrush.RadiusXProperty] = value;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/> with a source binding specified as a parameter.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="binding">The source binding.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush RadiusX(
        this Avalonia.Media.RadialGradientBrush obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.RadiusXProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/> with a source binding specified as an observable.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="observable">The source observable.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush RadiusX(
        this Avalonia.Media.RadialGradientBrush obj,
        IObservable<Avalonia.RelativeScalar> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.RadiusXProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// Makes a <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/> binding on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>A <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/> binding.</returns>
    public static Avalonia.Data.IBinding BindRadiusX(
        this Avalonia.Media.RadialGradientBrush obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.RadiusXProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// Gets an observable for an <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>
    /// An observable which fires immediately with the current value of the property on the object, and thereafter whenever the property changes.
    /// </returns>
    public static IObservable<Avalonia.RelativeScalar> ObserveRadiusX(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetObservable(Avalonia.Media.RadialGradientBrush.RadiusXProperty);
    }

    /// <summary>
    /// Registers a handler for the <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/> property on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler to be called when the property changes.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnRadiusX(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<Avalonia.RelativeScalar>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Media.RadialGradientBrush.RadiusXProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a binding observable for <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable including binding errors.</returns>
    public static IObservable<BindingValue<Avalonia.RelativeScalar>> ObserveBindingRadiusX(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetBindingObservable(Avalonia.Media.RadialGradientBrush.RadiusXProperty);
    }

    /// <summary>
    /// Sets a handler with a binding observable for <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and binding observable.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnBindingRadiusX(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<BindingValue<Avalonia.RelativeScalar>>> handler)
    {
        var observable = obj.GetBindingObservable(Avalonia.Media.RadialGradientBrush.RadiusXProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a property change observable for <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable with property change details.</returns>
    public static IObservable<AvaloniaPropertyChangedEventArgs> ObserveRadiusXChanged(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetPropertyChangedObservable(Avalonia.Media.RadialGradientBrush.RadiusXProperty);
    }

    /// <summary>
    /// Sets a handler with property change observable for <see cref="Avalonia.Media.RadialGradientBrush.RadiusXProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and property change observable.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnRadiusXChanged(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<AvaloniaPropertyChangedEventArgs>> handler)
    {
        var observable = obj.GetPropertyChangedObservable(Avalonia.Media.RadialGradientBrush.RadiusXProperty);
        handler(obj, observable);
        return obj;
    }

    // Avalonia.Media.RadialGradientBrush.RadiusYProperty

    /// <summary>
    /// Sets a <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/> value on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="value">The value to set for the property.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush RadiusY(this Avalonia.Media.RadialGradientBrush obj, Avalonia.RelativeScalar value)
    {
        obj[Avalonia.Media.RadialGradientBrush.RadiusYProperty] = value;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/> with a source binding specified as a parameter.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="binding">The source binding.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush RadiusY(
        this Avalonia.Media.RadialGradientBrush obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.RadiusYProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/> with a source binding specified as an observable.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="observable">The source observable.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>The target object reference.</returns>
    public static Avalonia.Media.RadialGradientBrush RadiusY(
        this Avalonia.Media.RadialGradientBrush obj,
        IObservable<Avalonia.RelativeScalar> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.RadiusYProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// Makes a <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/> binding on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>A <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/> binding.</returns>
    public static Avalonia.Data.IBinding BindRadiusY(
        this Avalonia.Media.RadialGradientBrush obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Media.RadialGradientBrush.RadiusYProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// Gets an observable for an <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/> on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>
    /// An observable which fires immediately with the current value of the property on the object, and thereafter whenever the property changes.
    /// </returns>
    public static IObservable<Avalonia.RelativeScalar> ObserveRadiusY(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetObservable(Avalonia.Media.RadialGradientBrush.RadiusYProperty);
    }

    /// <summary>
    /// Registers a handler for the <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/> property on an object of type <see cref="Avalonia.Media.RadialGradientBrush"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler to be called when the property changes.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnRadiusY(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<Avalonia.RelativeScalar>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Media.RadialGradientBrush.RadiusYProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a binding observable for <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable including binding errors.</returns>
    public static IObservable<BindingValue<Avalonia.RelativeScalar>> ObserveBindingRadiusY(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetBindingObservable(Avalonia.Media.RadialGradientBrush.RadiusYProperty);
    }

    /// <summary>
    /// Sets a handler with a binding observable for <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and binding observable.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnBindingRadiusY(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<BindingValue<Avalonia.RelativeScalar>>> handler)
    {
        var observable = obj.GetBindingObservable(Avalonia.Media.RadialGradientBrush.RadiusYProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Gets a property change observable for <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>An observable with property change details.</returns>
    public static IObservable<AvaloniaPropertyChangedEventArgs> ObserveRadiusYChanged(this Avalonia.Media.RadialGradientBrush obj)
    {
        return obj.GetPropertyChangedObservable(Avalonia.Media.RadialGradientBrush.RadiusYProperty);
    }

    /// <summary>
    /// Sets a handler with property change observable for <see cref="Avalonia.Media.RadialGradientBrush.RadiusYProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and property change observable.</param>
    /// <returns>The target object.</returns>
    public static Avalonia.Media.RadialGradientBrush OnRadiusYChanged(this Avalonia.Media.RadialGradientBrush obj, Action<Avalonia.Media.RadialGradientBrush, IObservable<AvaloniaPropertyChangedEventArgs>> handler)
    {
        var observable = obj.GetPropertyChangedObservable(Avalonia.Media.RadialGradientBrush.RadiusYProperty);
        handler(obj, observable);
        return obj;
    }
}
